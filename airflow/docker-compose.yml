version: '3.4'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.4.2
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env.airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - /var/run/docker.sock:/var/run/docker.sock

x-airflow-common-depends-on:
  &airflow-common-depends-on
  depends_on:
    airflow-db:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  app_db:
    image: postgres:13
    container_name: app-db
    env_file:
      - .env.app
    volumes:
      - app-db-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "app" ]
      interval: 5s
      retries: 5
    restart: always

  airflow-db:
    image: postgres:13
    container_name: airflow-db
    env_file:
      - .env.airflow
    volumes:
      - airflow-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    depends_on:
      airflow-db:
        condition: service_healthy
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins /sources/data
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins,data}
        exec /entrypoint airflow version

  airflow-scheduler:
    <<: *airflow-common
    <<: *airflow-common-depends-on
    container_name: airflow-scheduler
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    <<: *airflow-common-depends-on
    container_name: airflow-webserver
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

volumes:
  airflow-db-volume:
  app-db-volume:
